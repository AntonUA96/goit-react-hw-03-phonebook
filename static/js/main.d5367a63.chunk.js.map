{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","phone","name","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuidv4","onChekUnique","alert","resetForm","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","Filter","filter","App","number","handleAddContacts","newContact","handleCheckUniqueContact","checkContacts","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parseContacts","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","className","styles","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5367a63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst INITIAL_STATE = {\n  phone: '',\n  name: '',\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    const { name, phone } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidateForm = this.validateForm();\n    if (!isValidateForm) return;\n    onAdd({ id: uuidv4(), name, phone });\n  };\n\n  validateForm = () => {\n    const { name, phone } = this.state;\n    const { onChekUnique } = this.props;\n\n    if (!name || !phone) {\n      alert('Some file is empty');\n      return false;\n    }\n    return onChekUnique(name);\n  };\n\n  resetForm = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleChangeForm}\n        />\n        <input\n          type=\"text\"\n          name=\"phone\"\n          placeholder=\"Enter phone number\"\n          value={phone}\n          onChange={this.handleChangeForm}\n        />\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\n  return (\n    <li>\n      {name}: {phone} <button onClick={() => onRemove(id)}>delete</button>\n    </li>\n  );\n};\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem key={uuidv4()} {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  onRemove: PropTypes.func,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter name for search\"\n    />\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContacts = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n\n    const checkContacts = !!contacts.find(contact => contact.name === name);\n\n    checkContacts && alert('This contact is already exist');\n\n    return !checkContacts;\n  };\n\n  handleRemoveContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleFilterChange = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className={styles.container}>\n        <h2>Phonebook</h2>\n        <ContactForm\n          onAdd={this.handleAddContacts}\n          onChekUnique={this.handleCheckUniqueContact}\n        />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}